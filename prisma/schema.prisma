// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

// Note that some adapters may set a maximum length for the String type by default, please ensure your strings are long
// enough when changing adapters.
// See https://www.prisma.io/docs/orm/reference/prisma-schema-reference#string for more information
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id            String    @id
  shop          String
  state         String
  isOnline      Boolean   @default(false)
  scope         String?
  expires       DateTime?
  accessToken   String
  userId        BigInt?
  firstName     String?
  lastName      String?
  email         String?
  accountOwner  Boolean   @default(false)
  locale        String?
  collaborator  Boolean?  @default(false)
  emailVerified Boolean?  @default(false)
}

model Product {
  id              String    @id @default(cuid())
  shopifyId       String    @unique
  title           String
  handle          String
  productType     String?
  vendor          String?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  requireSerial   Boolean   @default(false)
  shop            String
  
  variants        ProductVariant[]
  serials         Serial[]
  
  @@map("products")
}

model ProductVariant {
  id              String    @id @default(cuid())
  shopifyId       String    @unique
  productId       String
  title           String
  sku             String?
  price           String?
  inventoryQty    Int?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  requireSerial   Boolean   @default(false)
  
  product         Product   @relation(fields: [productId], references: [id], onDelete: Cascade)
  serials         Serial[]
  
  @@map("product_variants")
}

model Serial {
  id              String    @id @default(cuid())
  serialNumber    String    @unique
  productId       String?
  variantId       String?
  orderId         String?
  status          SerialStatus @default(AVAILABLE)
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  shop            String
  
  product         Product?  @relation(fields: [productId], references: [id])
  variant         ProductVariant? @relation(fields: [variantId], references: [id])
  
  @@map("serials")
}

enum SerialStatus {
  AVAILABLE
  SOLD
  RETURNED
  DELETED
}
